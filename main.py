import telebot
from project import commands
import data_base
from telebot import types
from project.config import bot


@bot.message_handler(commands=['start'])
def start(message=None):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    markup.add(btn1)
    bot.send_message(message.from_user.id,
                     "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–±–µ—Ä–µ—Ç —Ç–µ–±–µ —Å–∞–º—ã–π –ø–æ–¥—Ö–æ–¥—è—â–∏–π –æ—Ç–µ–ª—å!",
                     reply_markup=markup)


def get_photos(photo):
    """–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    result = []
    for p in photo:
        result.append(types.InputMediaPhoto(media=p))
    return result


@bot.message_handler(content_types=['text'])
def get_text_messages(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã(–∫–Ω–æ–ø–∫–∏), –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞"""
    user = data_base.read_data(message.chat.id)
    if user.state == 'INSERT_LOCATION':
        response = commands.handle_city_insert(message, user)
        bot.send_message(chat_id=message.chat.id, text=response)

    elif user.state == 'INSERT_COUNT':
        response = commands.handle_count_insert(message, user)
        bot.send_message(chat_id=message.chat.id, text=response)

    elif user.state == 'INSERT_PHOTOS_NEEDED':
        response = commands.handle_photos_needed(message, user)
        bot.send_message(chat_id=message.chat.id, text=response)

    elif user.state == 'INSERT_PHOTOS_COUNT':
        response = commands.handle_photos_count(message, user)
        bot.send_message(chat_id=message.chat.id, text=response)

    elif user.state == 'INSERT_START_DATE':
        response = commands.handle_insert_start_date(message, user)
        bot.send_message(chat_id=message.chat.id, text=response)

    elif user.state == 'INSERT_END_DATE':
        response = commands.handle_insert_end_date(message, user)

        for p in response:
            bot.send_message(chat_id=message.chat.id, text=get_message_from_hotel_info_list(p))
            if len(p.photo) == 0:
                continue
            bot.send_media_group(chat_id=message.chat.id, media=get_photos(p.photo))
        user.history.append(get_history(user, response))
        create_start_response(message)
        user.state = ""
        data_base.write_data(user)

    elif user.state == 'INSERT_END_DATE_BEST_DEAL':
        response = commands.handle_end_date_best_deal(message, user)
        bot.send_message(chat_id=message.chat.id, text=response)

    elif user.state == 'INSERT_PRICE_RANGE':
        response = commands.handle_price_range(message, user)
        bot.send_message(chat_id=message.chat.id, text=response)

    elif user.state == 'INSERT_DISTANCE_RANGE':
        response = commands.handle_distance_range(message, user)
        if isinstance(response, str):
            bot.send_message(chat_id=message.chat.id, text=response)
            if response == "–ù–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –æ—Ç–µ–ª–µ–π —Å —Ç–∞–∫–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏":
                create_start_response(message)
                user.state = ""
                data_base.write_data(user)
            return
        for p in response:
            bot.send_message(chat_id=message.chat.id, text=get_message_from_hotel_info_list(p))
            if len(p.photo) == 0:
                continue
            bot.send_media_group(chat_id=message.chat.id, media=get_photos(p.photo))
        user.history.append(get_history(user, response))
        create_start_response(message)
        user.state = ""
        data_base.write_data(user)

    elif message.text == 'üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è':
        create_start_response(message)

    elif message.text == 'lowprice':
        bot.send_message(chat_id=message.chat.id, text=commands.handle_first_request(user, message, True, False))

    elif message.text == 'highprice':
        bot.send_message(chat_id=message.chat.id, text=commands.handle_first_request(user, message, False, False))

    elif message.text == 'bestdeal':
        bot.send_message(chat_id=message.chat.id, text=commands.handle_first_request(user, message, False, True))

    elif message.text == 'history':
        if len(user.history) == 0:
            bot.send_message(chat_id=message.chat.id, text="–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞—è")
        else:
            for entry in user.history:
                bot.send_message(chat_id=message.chat.id,
                                 text="–ö—Ä–∏—Ç–µ—Ä–∏–π –ø–æ–∏—Å–∫–∞: " + entry.command + "\n–í—Ä–µ–º—è: " + entry.datetime)
                for p in entry.hotels:
                    bot.send_message(chat_id=message.chat.id, text=get_message_from_hotel_info_list(p))
                    if len(p.photo) == 0:
                        continue
                    bot.send_media_group(chat_id=message.chat.id, media=get_photos(p.photo))

    elif message.text == 'help':
        bot.send_message(message.from_user.id, '–¢—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥, –¥–∞—Ç—É, –∂–µ–ª–∞–µ–º—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω($),\
         –∞ —Ç–∞–∫–∂–µ, –µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å, —è –º–æ–≥—É –Ω–∞–π—Ç–∏ –¥–ª—è —Ç–µ–±—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –æ—Ç–µ–ª–µ–π!\
        ‚ùì–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è‚ùì\n\
        üëâ lowprice - –ø–æ–∏—Å–∫ —Å–∞–º—ã—Ö –¥–µ—à–µ–≤—ã—Ö –æ—Ç–µ–ª–µ–π\n\
        üëâ highprice - –ø–æ–∏—Å–∫ –¥–æ—Ä–æ–≥–∏—Ö –æ—Ç–µ–ª–µ–π\n\
        üëâ bestdeal - –ø–æ–∏—Å–∫ –ª—É—á—à–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π\n\
        üëâ history - –∏—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞')


def create_start_response(message):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–≤–µ—á–∞—é—Ç –∑–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
    –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤—ã–±–æ—Ä–æ–º –¥–µ–π—Å—Ç–≤–∏—è."""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('lowprice')
    btn2 = types.KeyboardButton('highprice')
    btn3 = types.KeyboardButton('bestdeal')
    btn4 = types.KeyboardButton('history')
    btn5 = types.KeyboardButton('help')
    markup.add(btn1, btn2, btn3, btn4, btn5)
    bot.send_message(message.from_user.id, '‚ùì–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ ‚ùì', reply_markup=markup)


def get_message_from_hotel_info_list(h):
    """–ò—Ç–æ–≥–æ–≤—ã–π –≤—ã–≤–æ–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    hotel = str('–Ø –Ω–∞—à—ë–ª —Å–ª–µ–¥—É—é—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:\n\
    üèõ–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–µ–ª—è: {}\n\
    üåé–ê–¥—Ä–µ—Å: {}\n\
    üåé–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞: {}\n\
    üí∏–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –≤–µ—Å—å —Å—Ä–æ–∫: {}\n\
    üí∏–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –Ω–æ—á—å: {}') \
        .format(h.name, h.address, h.distance_from_centre, h.money, h.money_for_night)
    return hotel


def get_history(user, hotels):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –∏—Å—Ç–æ—Ä–∏–∏"""
    command: str
    if user.is_best_deal:
        command = "bestdeal"
    else:
        if user.is_lowest:
            command = "lowprice"
        else:
            command = "highprice"
    history = data_base.History()
    history.hotels = hotels
    history.datetime = user.datetime
    history.command = command
    return history


if __name__ == '__main__':
    bot.polling(none_stop=True, interval=0)
